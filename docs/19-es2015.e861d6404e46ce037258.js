(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{Gw2Q:function(e,n,a){"use strict";a.r(n),a.d(n,"ZipConcatmapModule",function(){return q});var c=a("iInd");class t{constructor(){this.fruits=["apple","apple","banana","banana"],this.expectedFruits=["apple","banana","apple","banana"],this.code='const apples = from(["apple", "apple"]);\nconst bananas = from(["banana", "banana"]);\n\nEMPTY.pipe(\n\t\n).subscribe(fruit => toConveyorBelt(fruit));\n',this.minPositionLineNumber=4,this.positionColumnNumber=2}}var i=a("8Y7J"),o=a("VIrA"),r=a("TSSN"),b=a("SVse"),s=a("dJsq"),p=a("uzYf");function l(e,n){if(1&e&&(i.Ob(0,"div"),i.Ob(1,"p"),i.qc(2,"Abwechslung ist der Schl\xfcssel zum Gl\xfcck!"),i.Nb(),i.Ob(3,"p"),i.qc(4,"Wir haben zwei Lieferungen bekommen und m\xfcssen den Inhalt abwechselnd auf das Flie\xdfband legen. Die "),i.Ob(5,"code",5),i.qc(6,"zip"),i.Nb(),i.qc(7,"-Funktion verbindet zwei Observables und gibt die Daten abwechselnd an die pipe-Funktion weiter. Allerdings nicht jede Frucht einzeln, sondern als mehrdimensionales Array. "),i.Ob(8,"a",6),i.qc(9,"(Mehr Infos zu zip)"),i.Nb(),i.Nb(),i.Ob(10,"p"),i.qc(11,"Der "),i.Ob(12,"code",5),i.qc(13,"concatMap"),i.Nb(),i.qc(14,"-Operator projiziert das mehrdimensionale Array in ein Observable und gibt die Fr\xfcchte wieder einzeln zur\xfcck. "),i.Ob(15,"a",7),i.qc(16,"(Mehr Infos zu concatMap)"),i.Nb(),i.Nb(),i.Nb()),2&e){i.ac();const e=i.hc(9),n=i.hc(15);i.Bb(5),i.fc("appTooltip",e),i.Bb(7),i.fc("appTooltip",n)}}function u(e,n){if(1&e&&(i.Ob(0,"div"),i.Ob(1,"p"),i.qc(2,"Variety is the key to happiness!"),i.Nb(),i.Ob(3,"p"),i.qc(4,"We have received two deliveries and have to alternately put the contents on the conveyor belt. The "),i.Ob(5,"code",5),i.qc(6,"zip"),i.Nb(),i.qc(7," function connects two observables and passes the data on to the pipe function alternately. However, not every fruit individually, but as a multi-dimensional array. "),i.Ob(8,"a",6),i.qc(9,"(Learn more about zip)"),i.Nb(),i.Nb(),i.Ob(10,"p"),i.qc(11,"The "),i.Ob(12,"code",5),i.qc(13,"concatMap"),i.Nb(),i.qc(14," operator projects the multidimensional array into an observable and returns the fruit individually. "),i.Ob(15,"a",7),i.qc(16,"(Learn more about concatMap)"),i.Nb(),i.Nb(),i.Nb()),2&e){i.ac();const e=i.hc(9),n=i.hc(15);i.Bb(5),i.fc("appTooltip",e),i.Bb(7),i.fc("appTooltip",n)}}function d(e,n){if(1&e&&(i.Ob(0,"div"),i.Ob(1,"p"),i.qc(2,"\u591a\u6837\u6027\u662f\u5e78\u798f\u7684\u5173\u952e\uff01"),i.Nb(),i.Ob(3,"p"),i.qc(4,"\u6211\u4eec\u6709\u4e24\u4e2a\u4f9b\u5e94\u5546\uff0c\u5fc5\u987b\u4ea4\u66ff\u628a\u4e0d\u540c\u4f9b\u5e94\u5546\u7684\u6c34\u679c\u653e\u5230\u4f20\u9001\u5e26\u4e0a\u3002 "),i.Ob(5,"code",5),i.qc(6,"zip"),i.Nb(),i.qc(7," \u64cd\u4f5c\u7b26\u53ef\u4ee5\u7ec4\u5408\u4e24\u4e2a observable \uff0c\u5e76\u5c06\u6570\u636e\u4ea4\u66ff\u4f20\u9012\u7ed9 pipe \u51fd\u6570\u3002\u7136\u800c\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u6c34\u679c\u90fd\u5355\u72ec\u5b58\u5728\uff0c\u800c\u662f\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4\u3002 "),i.Ob(8,"a",6),i.qc(9,"\uff08\u4e86\u89e3\u5173\u4e8e zip \u64cd\u4f5c\u7b26\u7684\u66f4\u591a\u4fe1\u606f\uff09"),i.Nb(),i.Nb(),i.Ob(10,"p"),i.Ob(11,"code",5),i.qc(12,"concatMap"),i.Nb(),i.qc(13," \u64cd\u4f5c\u7b26\u5c06\u591a\u7ef4\u6570\u7ec4\u6295\u5f71\u5230\u4e00\u4e2a observable \u5bf9\u8c61\u4e2d\uff0c\u5e76\u8fd4\u56de\u5355\u72ec\u7684\u6c34\u679c\u3002 "),i.Ob(14,"a",7),i.qc(15,"\uff08\u4e86\u89e3\u5173\u4e8e concatMap \u64cd\u4f5c\u7b26\u7684\u66f4\u591a\u4fe1\u606f\uff09"),i.Nb(),i.Nb(),i.Nb()),2&e){i.ac();const e=i.hc(9),n=i.hc(15);i.Bb(5),i.fc("appTooltip",e),i.Bb(6),i.fc("appTooltip",n)}}function h(e,n){if(1&e&&(i.Ob(0,"div"),i.Ob(1,"p"),i.qc(2,"\u0420\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u0435 - \u044d\u0442\u043e \u043a\u043b\u044e\u0447 \u043a \u0441\u0447\u0430\u0441\u0442\u044c\u044e!"),i.Nb(),i.Ob(3,"p"),i.qc(4,"\u041c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0434\u0432\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043d\u0430 \u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u043d\u0443\u044e \u043b\u0435\u043d\u0442\u0443. \u0424\u0443\u043d\u043a\u0446\u0438\u044f "),i.Ob(5,"code",5),i.qc(6,"zip"),i.Nb(),i.qc(7," \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u0434\u0432\u0435 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u043c\u044b\u0435 \u0438 \u043f\u043e\u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a\u0430\u043d\u0430\u043b\u0430. \u041e\u0434\u043d\u0430\u043a\u043e \u043d\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0444\u0440\u0443\u043a\u0442 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u0430 \u043a\u0430\u043a \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. "),i.Ob(8,"a",6),i.qc(9,"(\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e zip)"),i.Nb(),i.Nb(),i.Ob(10,"p"),i.qc(11,"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 "),i.Ob(12,"code",5),i.qc(13,"concatMap"),i.Nb(),i.qc(14," \u043f\u0440\u043e\u0435\u0446\u0438\u0440\u0443\u0435\u0442 \u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u043c\u0443\u044e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043b\u043e\u0434 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438. "),i.Ob(15,"a",7),i.qc(16,"(\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e concatMap)"),i.Nb(),i.Nb(),i.Nb()),2&e){i.ac();const e=i.hc(9),n=i.hc(15);i.Bb(5),i.fc("appTooltip",e),i.Bb(7),i.fc("appTooltip",n)}}function f(e,n){if(1&e&&(i.Ob(0,"div"),i.Ob(1,"p"),i.qc(2,"La variedad es la clave de la felicidad!"),i.Nb(),i.Ob(3,"p"),i.qc(4,"Hemos recibido dos entregas y tenemos que colocar los contenidos alternadamente en la cinta transportadora. La funci\xf3n "),i.Ob(5,"code",5),i.qc(6,"zip"),i.Nb(),i.qc(7," conecta dos observables y pasa la informaci\xf3n alternadamente a la funci\xf3n pipe. Sin embargo, no pasa cada fruta individualmente, sino como un arreglo multi-dimensional. "),i.Ob(8,"a",6),i.qc(9,"(Aprenda m\xe1s sobre zip)"),i.Nb(),i.Nb(),i.Ob(10,"p"),i.qc(11,"El operador "),i.Ob(12,"code",5),i.qc(13,"concatMap"),i.Nb(),i.qc(14," proyecta el arreglo multi-dimensional en un observable y retorna la fruta individualmente. "),i.Ob(15,"a",7),i.qc(16,"(Aprenda m\xe1s sobre concatMap)"),i.Nb(),i.Nb(),i.Nb()),2&e){i.ac();const e=i.hc(9),n=i.hc(15);i.Bb(5),i.fc("appTooltip",e),i.Bb(7),i.fc("appTooltip",n)}}const g=[{path:"",component:(()=>{class e{constructor(e,n){this.exerciseService=e,this.translateService=n,this.exerciseTitle="zip & concatMap",this.zipCode="\n  let age$ = of<number>(27, 25, 29);\n  let name$ = of<string>('Foo', 'Bar', 'Beer');\n  let isDev$ = of<boolean>(true, true, false);\n\n  zip(age$, name$, isDev$).pipe(\n    map(([age, name, isDev]) => ({ age, name, isDev })),\n  ).subscribe(x => console.log(x));\n\n  // Logs:\n  // { age: 27, name: 'Foo', isDev: true }\n  // { age: 25, name: 'Bar', isDev: true }\n  // { age: 29, name: 'Beer', isDev: false }\n  ",this.concatmapCode="\n  const counts = from([3, 2]);\n\n  counts.pipe(\n      concatMap(count => interval().pipe(\n          take(count)\n      ))\n  ).subscribe(result => console.log(result));\n\n  // Logs:\n  // 0\n  // 1\n  // 2\n  // 0\n  // 1\n  ",this.currentLanguage=""}ngOnInit(){this.exerciseService.newExercise(new t),this.currentLanguage=this.translateService.currentLang,this.onLangChangeSubscription=this.translateService.onLangChange.subscribe({next:()=>{this.currentLanguage=this.translateService.currentLang}})}ngOnDestroy(){this.onLangChangeSubscription.unsubscribe()}}return e.\u0275fac=function(n){return new(n||e)(i.Lb(o.a),i.Lb(r.d))},e.\u0275cmp=i.Fb({type:e,selectors:[["app-zip-concatmap"]],decls:20,vars:11,consts:[[4,"ngIf"],[1,"tooltip","codeTooltip"],["zipTooltip",""],[3,"highlight"],["concatMapTooltip",""],[1,"help",3,"appTooltip"],["href","https://rxjs.dev/api/index/function/zip","target","_blank"],["href","https://rxjs.dev/api/operators/concatMap","target","_blank"]],template:function(e,n){1&e&&(i.Ob(0,"h3"),i.qc(1),i.bc(2,"translate"),i.Nb(),i.pc(3,l,17,2,"div",0),i.pc(4,u,17,2,"div",0),i.pc(5,d,16,2,"div",0),i.pc(6,h,17,2,"div",0),i.pc(7,f,17,2,"div",0),i.Ob(8,"div",1,2),i.Ob(10,"pre"),i.qc(11,"        "),i.Mb(12,"code",3),i.qc(13,"\n   "),i.Nb(),i.Nb(),i.Ob(14,"div",1,4),i.Ob(16,"pre"),i.qc(17,"        "),i.Mb(18,"code",3),i.qc(19,"\n   "),i.Nb(),i.Nb()),2&e&&(i.Bb(1),i.tc("",i.cc(2,9,"EXERCISES.EXERCISETITLE"),": ",n.exerciseTitle,""),i.Bb(2),i.fc("ngIf","de"===n.currentLanguage),i.Bb(1),i.fc("ngIf","en"===n.currentLanguage),i.Bb(1),i.fc("ngIf","zh_CN"===n.currentLanguage),i.Bb(1),i.fc("ngIf","ru"===n.currentLanguage),i.Bb(1),i.fc("ngIf","es"===n.currentLanguage),i.Bb(5),i.fc("highlight",n.zipCode),i.Bb(6),i.fc("highlight",n.concatmapCode))},directives:[b.j,s.b,p.a],pipes:[r.c],styles:[""]}),e})()}];let m=(()=>{class e{}return e.\u0275mod=i.Jb({type:e}),e.\u0275inj=i.Ib({factory:function(n){return new(n||e)},imports:[[c.d.forChild(g)],c.d]}),e})();var v=a("PCNd");let q=(()=>{class e{}return e.\u0275mod=i.Jb({type:e}),e.\u0275inj=i.Ib({factory:function(n){return new(n||e)},imports:[[v.a,m]]}),e})()}}]);