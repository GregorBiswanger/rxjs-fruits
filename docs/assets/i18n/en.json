{
  "APP": {
    "CANCELBUTTON": "Cancel",
    "CONFIRMRESET": "Are you sure you want to reset the game?\n\nYour saved progress will be lost and you will have to start the game again.",
    "COOKIEBANNER": {
      "BUTTONS": {
        "ALLOW": "Allow cookies",
        "DENY": "Refuse cookies"
      },
      "MESSAGE": "By continuing your visit to this site, you accept the use of cookies by Google Analytics to collect visitor statistics.",
      "PRIVACYLINK": "More information"
    },
    "CREDITS": "<span>Made with ‚ù§ by </span><a class=\"credits-link\" href=\"https://about.me/gregor.biswanger\" target=\"_blank\">Gregor Biswanger</a> ‚Ä¢ <a class=\"credits-link\" href=\"https://github.com/GregorBiswanger/rxjs-fruits\" target=\"_blank\">GitHub</a> ‚Ä¢ <a class=\"credits-link\" href=\"https://twitter.com/BFreakout\" target=\"_blank\">Twitter</a> ‚Ä¢ <span class=\"credits-text\">Graphics by </span><a class=\"credits-link\" href=\"https://twitter.com/BeleEisenmann\" target=\"_blank\">Bele Eisenmann</a>",
    "FRUITS": {
      "APPLE": "Apple",
      "BANANA": "Banana",
      "CHERRY": "Cherry"
    },
    "GAMEOVERDIALOG": {
      "CONTRIBUTEMESSAGE": "If you have an idea for a level and are an Angular developer, <br />\nthen you can find more information here: <a href=\"https://github.com/GregorBiswanger/rxjs-fruits-schematics\" target=\"_blank\">rxjs-fruits-schematics</a>",
      "DONATEMESSAGE": "Did you like the game? Did you learn to understand RxJS better?<br />\nThen be so fair and give me a <s>beer</s> ahh coffee as a thank you:",
      "PAYSHAREMESSAGE": "Or pay with a share button click:",
      "SUBTITLE": "You did it and now you are a reactive barkeeper!",
      "THANKYOU": "Thanks to my wife Christine and my son Raphael for their support, <br />\nso that I got the time to develop this game. <br />\nI love you... ü•∞",
      "TITLE": "Congratulations üéâüéâüéâ"
    },
    "ISNOACTIVATESUBSCRIBE": "‚ùå The conveyor belt must be moved by calling the subscribe function!",
    "ISNOFRUITSINCOMING": "‚ùå The conveyor belt does not get any fruit!",
    "ISTOLITTLEFRUITS": "‚ùå The conveyor belt gets too little fruit!",
    "ISTOMUCHFRUITS": "‚ùå More fruits than specified in the recipe!",
    "LABELLEVEL": " of ",
    "LABELRESET": "Reset",
    "LEVEL": "Level ",
    "NEXTBUTTON": "Next",
    "OUTPUT": "There was an error with your code. Please use F12 to check the output in the console.",
    "PRIVACYBUTTON": "Privacy",
    "RECIPETITLE": "Recipe",
    "STARTBUTTON": "Play"
  },
  "EXERCISES": {
    "DISTINCT": {
      "RECIPEDESCRIPTION": "<p><b>Tip:</b> Press the F12 key and use the console within the developer tools of the browser for debugging.</p>\n<p>Each fruit should only be mixed once. (Note: use distinct)</p>"
    },
    "DISTINCTUNTILCHANGED": {
      "RECIPEDESCRIPTION": "No fruit should be mixed twice in a row. (Note: use distinctUntilChanged)"
    },
    "EXERCISETITLE": "Exercise",
    "FILTER": {
      "RECIPEDESCRIPTION": "All fresh apples and bananas should be mixed. (Note: use filter)"
    },
    "FILTER-MAP-TAKE": {
      "RECIPEDESCRIPTION": "<p><b>Tip:</b> Press the F12 key and use the console within the developer tools of the browser for debugging.</p>\n<p>Add only the fruits that are specified on the recipe. (Note: use filter, map and take)</p>"
    },
    "FORK-JOIN": {
      "RECIPEDESCRIPTION": "<p>Use concatMap like you did before</p>"
    },
    "MAP": {
      "RECIPEDESCRIPTION": "All apples and bananas should be cleared of dirt. (Note: use map)"
    },
    "MERGE": {
      "RECIPEDESCRIPTION": "<p><b>Tip:</b> Replace the EMPTY Observable with the merge function.</p>\n<p>Add only the fruits that are specified on the recipe. (Note: use merge and filter)</p>"
    },
    "REPEAT": {
      "RECIPEDESCRIPTION": "Add only the fruits specified on the recipe. (Note: use repeat)"
    },
    "SKIP": {
      "RECIPEDESCRIPTION": "Add only the fruits specified on the recipe. (Note: use skip)"
    },
    "SKIP-LAST": {
      "RECIPEDESCRIPTION": "Add only the fruits specified on the recipe. (Note: use skipLast)"
    },
    "SKIP-TAKE-MAP": {
      "RECIPEDESCRIPTION": "<p><b>Tip:</b> Press the F12 key and use the console within the developer tools of the browser for debugging.</p>\n<p>Add only the fruits that are specified on the recipe. (Note: use skip, take and map)</p>"
    },
    "SKIPLAST-SKIP-MERGE": {
      "RECIPEDESCRIPTION": "<p><b>Tip:</b> Replace the EMPTY Observable with the merge function.</p>\n<p><b>Tip:</b> Press the F12 key and use the console within the developer tools of the browser for debugging.</p>\n<p>Add only the fruits that are specified on the recipe. (Note: use skipLast, skip, merge and map)</p>"
    },
    "SUBSCRIBE": {
      "RECIPEDESCRIPTION": "In the source code we have an empty Observable with no data to expect. <p><b>Move the conveyor belt</b>, by subscribing to the empty Observable with the subscribe function and click on the start button.</p>"
    },
    "SUBSCRIBE-NEXT": {
      "RECIPEDESCRIPTION": "Subscribe to the Observable and put each fruit on the conveyor belt with the <b>toConveyorBelt</b> function.\n\n<p>Add only the fruits that are specified on the recipe. (Note: use subscribe with next)</p>"
    },
    "TAKE": {
      "RECIPEDESCRIPTION": "Only two bananas should be mixed. (Note: use take)"
    },
    "TAKE-LAST": {
      "RECIPEDESCRIPTION": "Only the last three fruits should be mixed. (Note: use takeLast)"
    },
    "ZIP-CONCATMAP": {
      "RECIPEDESCRIPTION": "<p><b>Tip:</b> Replace the EMPTY Observable with the zip function.</p>\n<p><b>Tip:</b> Press the F12 key and use the console within the developer tools of the browser for debugging.</p>\n<p>Each fruit should be mixed alternately. (Note: Use zip and concatMap)</p>"
    }
  }
}
